<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Параметры аутентификации по умолчанию
    |--------------------------------------------------------------------------
    |
    | Этот параметр определяет «охрану» аутентификации по умолчанию и пароль
    | сброс «брокера» для вашего приложения. Вы можете изменить эти значения
    | по мере необходимости, но они идеально подходят для начала большинства приложений.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Защитники аутентификации
    |--------------------------------------------------------------------------
    |
    | Далее вы можете определить каждый защитник аутентификации для своего приложения.
    | Конечно, для вас была определена отличная конфигурация по умолчанию,
    | которая использует хранилище сеансов плюс поставщик пользователей Eloquent.
    |
    | Все защитные защитные устройства аутентификации имеют поставщика пользователей, который определяет, как
    | пользователи фактически извлекаются из вашей базы данных или другой системы хранения,
    | используемой приложением. Обычно используется Eloquent.
    |
    | Поддерживается: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Поставщики пользователей
    |--------------------------------------------------------------------------
    |
    | Все аутентификационные сторожа имеют провайдера пользователя, который определяет, как
    | пользователи фактически извлекаются из вашей базы данных или другой системы хранения,
    | используемой приложением. Обычно используется Eloquent.
    |
    | Если у вас есть несколько пользовательских таблиц или моделей, вы можете настроить несколько
    | поставщиков для представления модели / таблицы. Затем эти поставщики могут быть назначены любым дополнительным аутентификационным сторожам, которые вы определили.
    |
    | Поддерживается: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Сброс паролей
    |--------------------------------------------------------------------------
    |
    | Эти параметры конфигурации определяют поведение функции сброса паролей Laravel, включая таблицу, используемую для хранения токенов,
    | и поставщика пользователей, который вызывается для фактического извлечения пользователей.
    |
    | Срок действия — это количество минут, в течение которых каждый токен сброса будет
    | считаться действительным. Эта функция безопасности делает токены недолговечными, поэтому
    | у них меньше времени на угадывание. Вы можете изменить это по мере необходимости.
    |
    | Параметр ограничения — это количество секунд, которое пользователь должен ждать, прежде чем
    | сгенерировать больше токенов сброса пароля. Это не позволяет пользователю
    | быстро генерировать очень большое количество токенов сброса пароля.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Тайм-аут подтверждения пароля
    |--------------------------------------------------------------------------
    |
    | Здесь вы можете определить количество секунд до истечения срока действия окна подтверждения пароля
    | и пользователю будет предложено повторно ввести свой пароль через экран подтверждения. По умолчанию тайм-аут длится три часа.
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];
